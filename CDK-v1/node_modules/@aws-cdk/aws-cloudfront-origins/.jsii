{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudfront": "1.137.0",
    "@aws-cdk/aws-elasticloadbalancingv2": "1.137.0",
    "@aws-cdk/aws-iam": "1.137.0",
    "@aws-cdk/aws-s3": "1.137.0",
    "@aws-cdk/core": "1.137.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudfront": {
      "submodules": {
        "@aws-cdk/aws-cloudfront.experimental": {}
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront"
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS CloudFront Origins",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.47.0 (build 86d2c33)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "cloudfront",
    "cloudfront-origins"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-cloudfront-origins",
  "readme": {
    "markdown": "# CloudFront Origins for the CDK CloudFront Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\nThis library contains convenience methods for defining origins for a CloudFront distribution. You can use this library to create origins from\nS3 buckets, Elastic Load Balancing v2 load balancers, or any other domain name.\n\n## S3 Bucket\n\nAn S3 bucket can be added as an origin. If the bucket is configured as a website endpoint, the distribution can use S3 redirects and S3 custom error\ndocuments.\n\n```ts\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n});\n```\n\nThe above will treat the bucket differently based on if `IBucket.isWebsite` is set or not. If the bucket is configured as a website, the bucket is\ntreated as an HTTP origin, and the built-in S3 redirects and error pages can be used. Otherwise, the bucket is handled as a bucket origin and\nCloudFront's redirect and error handling will be used. In the latter case, the Origin will create an origin access identity and grant it access to the\nunderlying bucket. This can be used in conjunction with a bucket that is not public to require that your users access your content using CloudFront\nURLs and not S3 URLs directly. Alternatively, a custom origin access identity can be passed to the S3 origin in the properties.\n\n### Adding Custom Headers\n\nYou can configure CloudFront to add custom headers to the requests that it sends to your origin. These custom headers enable you to send and gather information from your origin that you don’t get with typical viewer requests. These headers can even be customized for each origin. CloudFront supports custom headers for both for custom and Amazon S3 origins.\n\n```ts\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});\n```\n\n## ELBv2 Load Balancer\n\nAn Elastic Load Balancing (ELB) v2 load balancer may be used as an origin. In order for a load balancer to serve as an origin, it must be publicly\naccessible (`internetFacing` is true). Both Application and Network load balancers are supported.\n\n```ts\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst vpc = new ec2.Vpc(...);\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});\n```\n\nThe origin can also be customized to respond on different ports, have different connection properties, etc.\n\n```ts\nconst origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});\n```\n\n## From an HTTP endpoint\n\nOrigins can also be created from any other HTTP endpoint, given the domain name, and optionally, other origin properties.\n\n```ts\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});\n```\n\nSee the documentation of `@aws-cdk/aws-cloudfront` for more information.\n\n## Failover Origins (Origin Groups)\n\nYou can set up CloudFront with origin failover for scenarios that require high availability.\nTo get started, you create an origin group with two origins: a primary and a secondary.\nIf the primary origin is unavailable, or returns specific HTTP response status codes that indicate a failure,\nCloudFront automatically switches to the secondary origin.\nYou achieve that behavior in the CDK using the `OriginGroup` class:\n\n```ts\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-cloudfront-origins",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.CloudFront.Origins",
      "packageId": "Amazon.CDK.AWS.CloudFront.Origins"
    },
    "java": {
      "maven": {
        "artifactId": "cloudfront-origins",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.cloudfront.origins"
    },
    "js": {
      "npm": "@aws-cdk/aws-cloudfront-origins"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-cloudfront-origins",
      "module": "aws_cdk.aws_cloudfront_origins"
    }
  },
  "types": {
    "@aws-cdk/aws-cloudfront-origins.HttpOrigin": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "base": "@aws-cdk/aws-cloudfront.OriginBase",
      "docs": {
        "example": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});",
        "stability": "stable",
        "summary": "An Origin for an HTTP server or S3 bucket configured for website hosting."
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/http-origin.ts",
          "line": 58
        },
        "parameters": [
          {
            "name": "domainName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront-origins.HttpOriginProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/http-origin.ts",
        "line": 56
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/http-origin.ts",
            "line": 65
          },
          "name": "renderCustomOriginConfig",
          "overrides": "@aws-cdk/aws-cloudfront.OriginBase",
          "protected": true,
          "returns": {
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.CfnDistribution.CustomOriginConfigProperty"
            }
          }
        }
      ],
      "name": "HttpOrigin",
      "symbolId": "lib/http-origin:HttpOrigin"
    },
    "@aws-cdk/aws-cloudfront-origins.HttpOriginProps": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for an Origin backed by an S3 website-configured bucket, load balancer, or custom HTTP server.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as cdk from '@aws-cdk/core';\n\nconst httpOriginProps: cloudfront_origins.HttpOriginProps = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  httpPort: 123,\n  httpsPort: 123,\n  keepaliveTimeout: cdk.Duration.minutes(30),\n  originPath: 'originPath',\n  originShieldRegion: 'originShieldRegion',\n  originSslProtocols: [cloudfront.OriginSslPolicy.SSL_V3],\n  protocolPolicy: cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n  readTimeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.HttpOriginProps",
      "interfaces": [
        "@aws-cdk/aws-cloudfront.OriginProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/http-origin.ts",
        "line": 7
      },
      "name": "HttpOriginProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "80",
            "stability": "stable",
            "summary": "The HTTP port that CloudFront uses to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-origin.ts",
            "line": 27
          },
          "name": "httpPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "443",
            "stability": "stable",
            "summary": "The HTTPS port that CloudFront uses to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-origin.ts",
            "line": 34
          },
          "name": "httpsPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(5)",
            "remarks": "The valid range is from 1 to 60 seconds, inclusive.",
            "stability": "stable",
            "summary": "Specifies how long, in seconds, CloudFront persists its connection to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-origin.ts",
            "line": 50
          },
          "name": "keepaliveTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginSslPolicy.TLS_V1_2",
            "stability": "stable",
            "summary": "The SSL versions to use when interacting with the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-origin.ts",
            "line": 20
          },
          "name": "originSslProtocols",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginSslPolicy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "OriginProtocolPolicy.HTTPS_ONLY",
            "stability": "stable",
            "summary": "Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-origin.ts",
            "line": 13
          },
          "name": "protocolPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.OriginProtocolPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.seconds(30)",
            "remarks": "The valid range is from 1 to 60 seconds, inclusive.",
            "stability": "stable",
            "summary": "Specifies how long, in seconds, CloudFront waits for a response from the origin, also known as the origin response timeout."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/http-origin.ts",
            "line": 42
          },
          "name": "readTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/http-origin:HttpOriginProps"
    },
    "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "base": "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
      "docs": {
        "example": "// Creates a distribution from an ELBv2 load balancer\ndeclare const vpc: ec2.Vpc;\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});",
        "stability": "stable",
        "summary": "An Origin for a v2 load balancer."
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/load-balancer-origin.ts",
          "line": 14
        },
        "parameters": [
          {
            "name": "loadBalancer",
            "type": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2OriginProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/load-balancer-origin.ts",
        "line": 12
      },
      "name": "LoadBalancerV2Origin",
      "symbolId": "lib/load-balancer-origin:LoadBalancerV2Origin"
    },
    "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2OriginProps": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties for an Origin backed by a v2 load balancer.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as cdk from '@aws-cdk/core';\n\nconst loadBalancerV2OriginProps: cloudfront_origins.LoadBalancerV2OriginProps = {\n  connectionAttempts: 123,\n  connectionTimeout: cdk.Duration.minutes(30),\n  customHeaders: {\n    customHeadersKey: 'customHeaders',\n  },\n  httpPort: 123,\n  httpsPort: 123,\n  keepaliveTimeout: cdk.Duration.minutes(30),\n  originPath: 'originPath',\n  originShieldRegion: 'originShieldRegion',\n  originSslProtocols: [cloudfront.OriginSslPolicy.SSL_V3],\n  protocolPolicy: cloudfront.OriginProtocolPolicy.HTTP_ONLY,\n  readTimeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2OriginProps",
      "interfaces": [
        "@aws-cdk/aws-cloudfront-origins.HttpOriginProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/load-balancer-origin.ts",
        "line": 7
      },
      "name": "LoadBalancerV2OriginProps",
      "symbolId": "lib/load-balancer-origin:LoadBalancerV2OriginProps"
    },
    "@aws-cdk/aws-cloudfront-origins.OriginGroup": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "docs": {
        "remarks": "Consists of a primary Origin,\nand a fallback Origin called when the primary returns one of the provided HTTP status codes.",
        "stability": "stable",
        "summary": "An Origin that represents a group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\n\ndeclare const origin: cloudfront.IOrigin;\n\nconst originGroup = new cloudfront_origins.OriginGroup({\n  fallbackOrigin: origin,\n  primaryOrigin: origin,\n\n  // the properties below are optional\n  fallbackStatusCodes: [123],\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.OriginGroup",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/origin-group.ts",
          "line": 32
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront-origins.OriginGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOrigin"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/origin-group.ts",
        "line": 31
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The method called when a given Origin is added (for the first time) to a Distribution."
          },
          "locationInModule": {
            "filename": "lib/origin-group.ts",
            "line": 35
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cloudfront.IOrigin",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig"
            }
          }
        }
      ],
      "name": "OriginGroup",
      "symbolId": "lib/origin-group:OriginGroup"
    },
    "@aws-cdk/aws-cloudfront-origins.OriginGroupProps": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for {@link OriginGroup}.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as cloudfront_origins from '@aws-cdk/aws-cloudfront-origins';\n\ndeclare const origin: cloudfront.IOrigin;\n\nconst originGroupProps: cloudfront_origins.OriginGroupProps = {\n  fallbackOrigin: origin,\n  primaryOrigin: origin,\n\n  // the properties below are optional\n  fallbackStatusCodes: [123],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.OriginGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/origin-group.ts",
        "line": 5
      },
      "name": "OriginGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The fallback origin that should serve requests when the primary fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-group.ts",
            "line": 14
          },
          "name": "fallbackOrigin",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 500, 502, 503 and 504",
            "stability": "stable",
            "summary": "The list of HTTP status codes that, when returned from the primary origin, would cause querying the fallback origin."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-group.ts",
            "line": 23
          },
          "name": "fallbackStatusCodes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "number"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The primary origin that should serve requests for this group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/origin-group.ts",
            "line": 9
          },
          "name": "primaryOrigin",
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOrigin"
          }
        }
      ],
      "symbolId": "lib/origin-group:OriginGroupProps"
    },
    "@aws-cdk/aws-cloudfront-origins.S3Origin": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "docs": {
        "example": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});",
        "remarks": "If the bucket is configured for website hosting, this origin will be configured to use the bucket as an\nHTTP server origin and will use the bucket's configured website redirects and error handling. Otherwise,\nthe origin is created as a bucket origin and will use CloudFront's redirect and error handling.",
        "stability": "stable",
        "summary": "An Origin that is backed by an S3 bucket."
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.S3Origin",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/s3-origin.ts",
          "line": 33
        },
        "parameters": [
          {
            "name": "bucket",
            "type": {
              "fqn": "@aws-cdk/aws-s3.IBucket"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront-origins.S3OriginProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-cloudfront.IOrigin"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/s3-origin.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The method called when a given Origin is added (for the first time) to a Distribution."
          },
          "locationInModule": {
            "filename": "lib/s3-origin.ts",
            "line": 42
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-cloudfront.IOrigin",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-cloudfront.OriginBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudfront.OriginBindConfig"
            }
          }
        }
      ],
      "name": "S3Origin",
      "symbolId": "lib/s3-origin:S3Origin"
    },
    "@aws-cdk/aws-cloudfront-origins.S3OriginProps": {
      "assembly": "@aws-cdk/aws-cloudfront-origins",
      "datatype": true,
      "docs": {
        "example": "import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});",
        "stability": "stable",
        "summary": "Properties to use to customize an S3 Origin."
      },
      "fqn": "@aws-cdk/aws-cloudfront-origins.S3OriginProps",
      "interfaces": [
        "@aws-cdk/aws-cloudfront.OriginProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/s3-origin.ts",
        "line": 14
      },
      "name": "S3OriginProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- An Origin Access Identity will be created.",
            "stability": "stable",
            "summary": "An optional Origin Access Identity of the origin identity cloudfront will use when calling your s3 bucket."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/s3-origin.ts",
            "line": 20
          },
          "name": "originAccessIdentity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-cloudfront.IOriginAccessIdentity"
          }
        }
      ],
      "symbolId": "lib/s3-origin:S3OriginProps"
    }
  },
  "version": "1.137.0",
  "fingerprint": "**********"
}
