{
  "version": "2",
  "toolVersion": "1.47.0",
  "snippets": {
    "8dde59bd89bd22eb86aec8fcad7d9c7b8bb0efa46063e41e35764101b6921de7": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cloudfront as cloudfront\nimport aws_cdk.aws_cloudfront_origins as origins\n\nmy_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.S3Origin(my_bucket))\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.CloudFront;\nusing Amazon.CDK.AWS.CloudFront.Origins;\n\nvar myBucket = new s3.Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new S3Origin(myBucket) }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cloudfront.*;\nimport software.amazon.awscdk.services.cloudfront.origins.*;\n\nObject myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new S3Origin(myBucket)).build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 20
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket) },\n});",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "104": 2,
        "193": 2,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "f7872308664b6c3ffe6ee0116f38e2fd6f2b21903f1cc6b74c1dcaa2765895be"
    },
    "7e9de4ced2f6e992f789340e2bea38c4ccc615a8246d4749c988b937ffc51b3e": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cloudfront as cloudfront\nimport aws_cdk.aws_cloudfront_origins as origins\n\nmy_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.S3Origin(my_bucket,\n        custom_headers={\n            \"Foo\": \"bar\"\n        }\n    ))\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.CloudFront;\nusing Amazon.CDK.AWS.CloudFront.Origins;\n\nvar myBucket = new s3.Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new S3Origin(myBucket, new S3OriginProps {\n        CustomHeaders = new Dictionary<string, string> {\n            { \"Foo\", \"bar\" }\n        }\n    }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cloudfront.*;\nimport software.amazon.awscdk.services.cloudfront.origins.*;\n\nObject myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(S3Origin.Builder.create(myBucket)\n                .customHeaders(Map.of(\n                        \"Foo\", \"bar\"))\n                .build()).build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 40
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront-origins.S3OriginProps",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});",
      "syntaxKindCounter": {
        "10": 5,
        "75": 14,
        "104": 2,
        "193": 4,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e0f2aae2dc96c32bcfdd8b17f729e3ba22d1dc428c7c9fa23df4b71c3e08a16a"
    },
    "fef37a6cb7e6f5e4e544b54db9d3077d5a334b5e4fd31e2141b358b65570f802": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_elasticloadbalancingv2 as elbv2\n\nvpc = ec2.Vpc(...)\n# Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n# for CloudFront to access the load balancer and use it as an origin.\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior={\"origin\": origins.LoadBalancerV2Origin(lb)}\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.ElasticLoadBalancingV2;\n\nVpc vpc = new Vpc(...);\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\nnew cloudfront.Distribution(this, \"myDist\", new Struct {\n    DefaultBehavior = new Struct { Origin = new origins.LoadBalancerV2Origin(lb) }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.elasticloadbalancingv2.*;\n\nVpc vpc = new Vpc(...);\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(Map.of(\"origin\", new LoadBalancerV2Origin(lb)))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst vpc = new ec2.Vpc(...);\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 59
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-ec2.Vpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps"
      ],
      "fullSource": "import * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\n\nconst vpc = new ec2.Vpc(...);\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});",
      "syntaxKindCounter": {
        "10": 4,
        "75": 18,
        "104": 2,
        "106": 1,
        "193": 3,
        "194": 4,
        "197": 4,
        "213": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "b4702accbc9779e2a647e8a28c67de3594dfe3be79c40878be7db6924b5b19ff"
    },
    "ecfbbc1f9643b9ed6abbba4d16fdd5af4e2239ae791bd5211c123dd38ce9a826": {
      "translations": {
        "python": {
          "source": "origin = origins.LoadBalancerV2Origin(load_balancer,\n    connection_attempts=3,\n    connection_timeout=Duration.seconds(5),\n    protocol_policy=cloudfront.OriginProtocolPolicy.MATCH_VIEWER\n)",
          "version": "1"
        },
        "csharp": {
          "source": "var origin = new origins.LoadBalancerV2Origin(loadBalancer, new Struct {\n    ConnectionAttempts = 3,\n    ConnectionTimeout = Duration.Seconds(5),\n    ProtocolPolicy = cloudfront.OriginProtocolPolicy.MATCH_VIEWER\n});",
          "version": "1"
        },
        "java": {
          "source": "Object origin = LoadBalancerV2Origin.Builder.create(loadBalancer)\n        .connectionAttempts(3)\n        .connectionTimeout(Duration.seconds(5))\n        .protocolPolicy(cloudfront.getOriginProtocolPolicy().getMATCH_VIEWER())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "const origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 77
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "const origin = new origins.LoadBalancerV2Origin(loadBalancer, {\n  connectionAttempts: 3,\n  connectionTimeout: Duration.seconds(5),\n  protocolPolicy: cloudfront.OriginProtocolPolicy.MATCH_VIEWER,\n});",
      "syntaxKindCounter": {
        "8": 2,
        "75": 12,
        "193": 1,
        "194": 4,
        "196": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "a2c0197f51c18384b282d3207cd211fbb5d656e2be38bb0f44b7873c6382411c": {
      "translations": {
        "python": {
          "source": "cloudfront.Distribution(self, \"myDist\",\n    default_behavior={\"origin\": origins.HttpOrigin(\"www.example.com\")}\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new cloudfront.Distribution(this, \"myDist\", new Struct {\n    DefaultBehavior = new Struct { Origin = new origins.HttpOrigin(\"www.example.com\") }\n});",
          "version": "1"
        },
        "java": {
          "source": "Distribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(Map.of(\"origin\", new HttpOrigin(\"www.example.com\")))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 89
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.HttpOrigin('www.example.com') },\n});",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "104": 1,
        "193": 2,
        "194": 2,
        "197": 2,
        "226": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "4b579f0c4da5660f27a970d3f651123341aeca86ccf17b80ecbf7aa88c9fa801": {
      "translations": {
        "python": {
          "source": "cloudfront.Distribution(self, \"myDist\",\n    default_behavior={\n        \"origin\": origins.OriginGroup(\n            primary_origin=origins.S3Origin(my_bucket),\n            fallback_origin=origins.HttpOrigin(\"www.example.com\"),\n            # optional, defaults to: 500, 502, 503 and 504\n            fallback_status_codes=[404]\n        )\n    }\n)",
          "version": "1"
        },
        "csharp": {
          "source": "new cloudfront.Distribution(this, \"myDist\", new Struct {\n    DefaultBehavior = new Struct {\n        Origin = new origins.OriginGroup(new Struct {\n            PrimaryOrigin = new origins.S3Origin(myBucket),\n            FallbackOrigin = new origins.HttpOrigin(\"www.example.com\"),\n            // optional, defaults to: 500, 502, 503 and 504\n            FallbackStatusCodes = new [] { 404 }\n        })\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Distribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(Map.of(\n                \"origin\", OriginGroup.Builder.create()\n                        .primaryOrigin(new S3Origin(myBucket))\n                        .fallbackOrigin(new HttpOrigin(\"www.example.com\"))\n                        // optional, defaults to: 500, 502, 503 and 504\n                        .fallbackStatusCodes(List.of(404))\n                        .build()))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-cloudfront-origins"
        },
        "field": {
          "field": "markdown",
          "line": 105
        }
      },
      "didCompile": false,
      "fqnsReferenced": [],
      "fullSource": "new cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: {\n    origin: new origins.OriginGroup({\n      primaryOrigin: new origins.S3Origin(myBucket),\n      fallbackOrigin: new origins.HttpOrigin('www.example.com'),\n      // optional, defaults to: 500, 502, 503 and 504\n      fallbackStatusCodes: [404],\n    }),\n  },\n});",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 14,
        "104": 1,
        "192": 1,
        "193": 3,
        "194": 4,
        "197": 4,
        "226": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
    },
    "ab6b6d6f35e8cf8b561b8ba3d8571a97ed72ff208a04b9ffccd218a1f5aacd01": {
      "translations": {
        "python": {
          "source": "# Validating signed URLs or signed cookies with Trusted Key Groups\n\n# public key in PEM format\n# public_key is of type string\n\npub_key = cloudfront.PublicKey(self, \"MyPubKey\",\n    encoded_key=public_key\n)\n\nkey_group = cloudfront.KeyGroup(self, \"MyKeyGroup\",\n    items=[pub_key\n    ]\n)\n\ncloudfront.Distribution(self, \"Dist\",\n    default_behavior=cloudfront.BehaviorOptions(\n        origin=origins.HttpOrigin(\"www.example.com\"),\n        trusted_key_groups=[key_group\n        ]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\nstring publicKey;\n\nPublicKey pubKey = new PublicKey(this, \"MyPubKey\", new PublicKeyProps {\n    EncodedKey = publicKey\n});\n\nKeyGroup keyGroup = new KeyGroup(this, \"MyKeyGroup\", new KeyGroupProps {\n    Items = new [] { pubKey }\n});\n\nnew Distribution(this, \"Dist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions {\n        Origin = new HttpOrigin(\"www.example.com\"),\n        TrustedKeyGroups = new [] { keyGroup }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\nString publicKey;\n\nPublicKey pubKey = PublicKey.Builder.create(this, \"MyPubKey\")\n        .encodedKey(publicKey)\n        .build();\n\nKeyGroup keyGroup = KeyGroup.Builder.create(this, \"MyKeyGroup\")\n        .items(List.of(pubKey))\n        .build();\n\nDistribution.Builder.create(this, \"Dist\")\n        .defaultBehavior(BehaviorOptions.builder()\n                .origin(new HttpOrigin(\"www.example.com\"))\n                .trustedKeyGroups(List.of(keyGroup))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.HttpOrigin"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.HttpOrigin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-cloudfront.KeyGroup",
        "@aws-cdk/aws-cloudfront.KeyGroupProps",
        "@aws-cdk/aws-cloudfront.PublicKey",
        "@aws-cdk/aws-cloudfront.PublicKeyProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Validating signed URLs or signed cookies with Trusted Key Groups\n\n// public key in PEM format\ndeclare const publicKey: string;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst pubKey = new cloudfront.PublicKey(this, 'MyPubKey', {\n  encodedKey: publicKey,\n});\n\nconst keyGroup = new cloudfront.KeyGroup(this, 'MyKeyGroup', {\n  items: [\n    pubKey,\n  ],\n});\n\nnew cloudfront.Distribution(this, 'Dist', {\n  defaultBehavior: {\n    origin: new origins.HttpOrigin('www.example.com'),\n    trustedKeyGroups: [\n      keyGroup,\n    ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 19,
        "104": 3,
        "130": 1,
        "143": 1,
        "192": 2,
        "193": 4,
        "194": 4,
        "197": 4,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "a34ad8b29322d0222be60936cd1d5e5863aefaf4db87f68cd42f50828c43ba44"
    },
    "95453e0a9b4448560b3f70b22edcbc2228ec3a3441afdfdc137b1ee419196514": {
      "translations": {
        "python": {
          "source": "# Creates a distribution from an ELBv2 load balancer\n# vpc is of type Vpc\n\n# Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n# for CloudFront to access the load balancer and use it as an origin.\nlb = elbv2.ApplicationLoadBalancer(self, \"LB\",\n    vpc=vpc,\n    internet_facing=True\n)\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.LoadBalancerV2Origin(lb))\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Creates a distribution from an ELBv2 load balancer\nVpc vpc;\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"LB\", new ApplicationLoadBalancerProps {\n    Vpc = vpc,\n    InternetFacing = true\n});\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new LoadBalancerV2Origin(lb) }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Creates a distribution from an ELBv2 load balancer\nVpc vpc;\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"LB\")\n        .vpc(vpc)\n        .internetFacing(true)\n        .build();\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(new LoadBalancerV2Origin(lb)).build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Creates a distribution from an ELBv2 load balancer\ndeclare const vpc: ec2.Vpc;\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.LoadBalancerV2Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-ec2.IVpc",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
        "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "@aws-cdk/aws-elasticloadbalancingv2.ILoadBalancerV2"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Creates a distribution from an ELBv2 load balancer\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n// Create an application load balancer in a VPC. 'internetFacing' must be 'true'\n// for CloudFront to access the load balancer and use it as an origin.\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'LB', {\n  vpc,\n  internetFacing: true,\n});\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.LoadBalancerV2Origin(lb) },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "104": 2,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 3,
        "194": 3,
        "197": 3,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "dc093ed068f2716951f95c67ac367cb5ed1d30001333fe57b0ca25e058545d9b"
    },
    "2f2b3a47a253cdb7b87de12a7e3e7ab56f9d5f42320e52d7dd568d6798750e43": {
      "translations": {
        "python": {
          "source": "# Adding an existing Lambda@Edge function created in a different stack\n# to a CloudFront distribution.\n# s3_bucket is of type Bucket\n\nfunction_version = lambda_.Version.from_version_arn(self, \"Version\", \"arn:aws:lambda:us-east-1:123456789012:function:functionName:1\")\n\ncloudfront.Distribution(self, \"distro\",\n    default_behavior=cloudfront.BehaviorOptions(\n        origin=origins.S3Origin(s3_bucket),\n        edge_lambdas=[cloudfront.EdgeLambda(\n            function_version=function_version,\n            event_type=cloudfront.LambdaEdgeEventType.VIEWER_REQUEST\n        )\n        ]\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\nBucket s3Bucket;\n\nIVersion functionVersion = Version.FromVersionArn(this, \"Version\", \"arn:aws:lambda:us-east-1:123456789012:function:functionName:1\");\n\nnew Distribution(this, \"distro\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions {\n        Origin = new S3Origin(s3Bucket),\n        EdgeLambdas = new [] { new EdgeLambda {\n            FunctionVersion = functionVersion,\n            EventType = LambdaEdgeEventType.VIEWER_REQUEST\n        } }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\nBucket s3Bucket;\n\nIVersion functionVersion = Version.fromVersionArn(this, \"Version\", \"arn:aws:lambda:us-east-1:123456789012:function:functionName:1\");\n\nDistribution.Builder.create(this, \"distro\")\n        .defaultBehavior(BehaviorOptions.builder()\n                .origin(new S3Origin(s3Bucket))\n                .edgeLambdas(List.of(EdgeLambda.builder()\n                        .functionVersion(functionVersion)\n                        .eventType(LambdaEdgeEventType.VIEWER_REQUEST)\n                        .build()))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.S3Origin"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-cloudfront.LambdaEdgeEventType",
        "@aws-cdk/aws-cloudfront.LambdaEdgeEventType#VIEWER_REQUEST",
        "@aws-cdk/aws-lambda.IVersion",
        "@aws-cdk/aws-lambda.Version",
        "@aws-cdk/aws-lambda.Version#fromVersionArn",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// Adding an existing Lambda@Edge function created in a different stack\n// to a CloudFront distribution.\ndeclare const s3Bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as path from 'path';\n\nclass Context extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst functionVersion = lambda.Version.fromVersionArn(this, 'Version', 'arn:aws:lambda:us-east-1:123456789012:function:functionName:1');\n\nnew cloudfront.Distribution(this, 'distro', {\n  defaultBehavior: {\n    origin: new origins.S3Origin(s3Bucket),\n    edgeLambdas: [\n      {\n        functionVersion,\n        eventType: cloudfront.LambdaEdgeEventType.VIEWER_REQUEST,\n      },\n    ],\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 20,
        "104": 2,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "194": 6,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 4,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "89862a11bb1623444fd4621194511ba798dfe06dfffa09051833ea489e26fe7e"
    },
    "01619d941186eaa79571dfc365774c16d4d34df936b28133a12219b669397d6e": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_cloudfront as cloudfront\nimport aws_cdk.aws_cloudfront_origins as origins\n\nmy_bucket = s3.Bucket(self, \"myBucket\")\ncloudfront.Distribution(self, \"myDist\",\n    default_behavior=cloudfront.BehaviorOptions(origin=origins.S3Origin(my_bucket,\n        custom_headers={\n            \"Foo\": \"bar\"\n        }\n    ))\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.CloudFront;\nusing Amazon.CDK.AWS.CloudFront.Origins;\n\nvar myBucket = new s3.Bucket(this, \"myBucket\");\nnew Distribution(this, \"myDist\", new DistributionProps {\n    DefaultBehavior = new BehaviorOptions { Origin = new S3Origin(myBucket, new S3OriginProps {\n        CustomHeaders = new Dictionary<string, string> {\n            { \"Foo\", \"bar\" }\n        }\n    }) }\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.cloudfront.*;\nimport software.amazon.awscdk.services.cloudfront.origins.*;\n\nObject myBucket = new Bucket(this, \"myBucket\");\nDistribution.Builder.create(this, \"myDist\")\n        .defaultBehavior(BehaviorOptions.builder().origin(S3Origin.Builder.create(myBucket)\n                .customHeaders(Map.of(\n                        \"Foo\", \"bar\"))\n                .build()).build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-cloudfront-origins.S3OriginProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": false,
      "fqnsReferenced": [
        "@aws-cdk/aws-cloudfront-origins.S3Origin",
        "@aws-cdk/aws-cloudfront-origins.S3OriginProps",
        "@aws-cdk/aws-cloudfront.BehaviorOptions",
        "@aws-cdk/aws-cloudfront.Distribution",
        "@aws-cdk/aws-cloudfront.DistributionProps",
        "@aws-cdk/aws-cloudfront.IOrigin",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "import * as cloudfront from '@aws-cdk/aws-cloudfront';\nimport * as origins from '@aws-cdk/aws-cloudfront-origins';\n\nconst myBucket = new s3.Bucket(this, 'myBucket');\nnew cloudfront.Distribution(this, 'myDist', {\n  defaultBehavior: { origin: new origins.S3Origin(myBucket, {\n    customHeaders: {\n      Foo: 'bar',\n    },\n  })},\n});",
      "syntaxKindCounter": {
        "10": 5,
        "75": 14,
        "104": 2,
        "193": 4,
        "194": 3,
        "197": 3,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e0f2aae2dc96c32bcfdd8b17f729e3ba22d1dc428c7c9fa23df4b71c3e08a16a"
    }
  }
}
