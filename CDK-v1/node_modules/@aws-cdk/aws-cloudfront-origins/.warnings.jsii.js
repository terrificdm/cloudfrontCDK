function _aws_cdk_aws_cloudfront_origins_LoadBalancerV2OriginProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.originSslProtocols))
        require("@aws-cdk/aws-cloudfront/.warnings.jsii.js")._aws_cdk_aws_cloudfront_OriginSslPolicy(p.originSslProtocols);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_cloudfront_origins_S3OriginProps(p) {
}
function _aws_cdk_aws_cloudfront_origins_OriginGroupProps(p) {
}
function _aws_cdk_aws_cloudfront_origins_HttpOrigin(p) {
}
function _aws_cdk_aws_cloudfront_origins_LoadBalancerV2Origin(p) {
}
function _aws_cdk_aws_cloudfront_origins_OriginGroup(p) {
}
function _aws_cdk_aws_cloudfront_origins_S3Origin(p) {
}
function _aws_cdk_aws_cloudfront_origins_HttpOriginProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.originSslProtocols))
        require("@aws-cdk/aws-cloudfront/.warnings.jsii.js")._aws_cdk_aws_cloudfront_OriginSslPolicy(p.originSslProtocols);
    visitedObjects.delete(p);
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
const visitedObjects = new Set();
class DeprecationError extends Error {
}
module.exports = { print, _aws_cdk_aws_cloudfront_origins_LoadBalancerV2OriginProps, _aws_cdk_aws_cloudfront_origins_S3OriginProps, _aws_cdk_aws_cloudfront_origins_OriginGroupProps, _aws_cdk_aws_cloudfront_origins_HttpOrigin, _aws_cdk_aws_cloudfront_origins_LoadBalancerV2Origin, _aws_cdk_aws_cloudfront_origins_OriginGroup, _aws_cdk_aws_cloudfront_origins_S3Origin, _aws_cdk_aws_cloudfront_origins_HttpOriginProps };
module.exports.DeprecationError = DeprecationError;
